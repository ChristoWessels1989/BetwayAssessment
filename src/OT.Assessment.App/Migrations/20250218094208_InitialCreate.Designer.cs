// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OT.Assessment.App.Data;

#nullable disable

namespace OT.Assessment.App.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20250218094208_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OT.Assessment.App.Models.CasinoWager", b =>
                {
                    b.Property<Guid>("WagerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<Guid>("BrandId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<long>("Duration")
                        .HasColumnType("bigint");

                    b.Property<Guid>("ExternalReferenceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("GameName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("GameProviderName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("NumberOfBets")
                        .HasColumnType("int");

                    b.Property<Guid?>("PlayerAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Provider")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SessionData")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Theme")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TransactionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TransactionTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("WagerId");

                    b.HasIndex("GameName");

                    b.HasIndex("GameProviderName");

                    b.HasIndex("PlayerAccountId");

                    b.ToTable("CasinoWagers");
                });

            modelBuilder.Entity("OT.Assessment.App.Models.Game", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderName1")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Theme")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Name");

                    b.HasIndex("ProviderName");

                    b.HasIndex("ProviderName1");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("OT.Assessment.App.Models.Player", b =>
                {
                    b.Property<Guid>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AccountId");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("OT.Assessment.App.Models.Provider", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Name");

                    b.ToTable("Providers");
                });

            modelBuilder.Entity("OT.Assessment.App.Models.CasinoWager", b =>
                {
                    b.HasOne("OT.Assessment.App.Models.Game", "Game")
                        .WithMany()
                        .HasForeignKey("GameName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OT.Assessment.App.Models.Provider", "GameProvider")
                        .WithMany()
                        .HasForeignKey("GameProviderName");

                    b.HasOne("OT.Assessment.App.Models.Player", "Player")
                        .WithMany("CasinoWagers")
                        .HasForeignKey("PlayerAccountId");

                    b.Navigation("Game");

                    b.Navigation("GameProvider");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("OT.Assessment.App.Models.Game", b =>
                {
                    b.HasOne("OT.Assessment.App.Models.Provider", null)
                        .WithMany("Games")
                        .HasForeignKey("ProviderName");

                    b.HasOne("OT.Assessment.App.Models.Provider", null)
                        .WithMany("LinkedGames")
                        .HasForeignKey("ProviderName1");
                });

            modelBuilder.Entity("OT.Assessment.App.Models.Player", b =>
                {
                    b.Navigation("CasinoWagers");
                });

            modelBuilder.Entity("OT.Assessment.App.Models.Provider", b =>
                {
                    b.Navigation("Games");

                    b.Navigation("LinkedGames");
                });
#pragma warning restore 612, 618
        }
    }
}
